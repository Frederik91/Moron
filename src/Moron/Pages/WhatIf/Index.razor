@page "/whatif/"
@inject ISessionService sessionService
@inject IPlayerService playerService
@inject IUriHelper uriHelper

<h1>What if?</h1>

<style>
    .card-square.mdl-card {
        width: 320px;
        height: 260px;
    }

    .create-card-square > .mdl-card__title {
        color: #fff;
        background: url('/img/create.jpg') bottom right 15% no-repeat #46B6AC;
    }

    .join-card-square > .mdl-card__title {
        color: #fff;
        background: url('/img/join.jpg') bottom right 15% no-repeat #46B6AC;
    }
</style>

<div class="create-card-square mdl-card mdl-shadow--2dp" style="margin: 10px">
    <div class="mdl-card__title mdl-card--expand">
        <h2 class="mdl-card__title-text">Create a new game</h2>
    </div>
    <div class="mdl-card__actions mdl-card--border">
        <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect" onclick="@CreateSession">
            Create
        </a>
    </div>
</div>

<div class="join-card-square mdl-card mdl-shadow--2dp" style="margin: 10px">
    <div class="mdl-card__title mdl-card--expand">
        <h2 class="mdl-card__title-text">Join existing game</h2>
    </div>
    <div class="mdl-card__actions mdl-card--border">
        <div class="mdl-textfield mdl-js-textfield">
            <label>Join id</label>
            <input class="mdl-textfield__input" bind="@joinId" type="text" />
        </div>
        <div class="mdl-textfield mdl-js-textfield">
            <label>Name</label>
            <input class="mdl-textfield__input" bind="@name" type="text" />
        </div>
        <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect" onclick="@JoinSession">
            Join
        </a>
    </div>
</div>

@functions {

    string joinId = string.Empty;
    string warning = string.Empty;
    string name = string.Empty;

    async Task JoinSession()
    {
        int.TryParse(joinId, out var id);
        if (id < 1000 || id > 9999)
        {
            warning = "Invalid session id";
            return;
        }
        if (string.IsNullOrEmpty(name))
        {
            warning = "Please enter a name";
            return;
        }
        var session = await sessionService.GetSessionAsync(id);
        var player = await playerService.Create(name);
        await sessionService.AddPlayerToSession(session.SessionId, player.PlayerId);
        if (session is null)
        {
            warning = "Session not found";
            return;
        }
        uriHelper.NavigateTo($"whatif/session/{session.SessionId}/{player.PlayerId}/lobby");

    }

    void CreateSession()
    {
        uriHelper.NavigateTo($"whatif/session/create");
    }
}