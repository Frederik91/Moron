@page "/whatif/session/{SessionId:guid}/{PlayerId:guid}/Game"
@inject IAnswerService answerService
@inject IWhatIfOptionService optionService
@inject IQuestionService questionService
@inject IPlayerService playerService
@inject IUriHelper uriHelper


<style>
    .card-square.mdl-card {
        width: 320px;
        height: 260px;
    }

    .create-card-square > .mdl-card__title {
        color: #000;
    }
</style>

@if (!IsWaiting)
{
    <div class="create-card-square mdl-card mdl-shadow--2dp" style="margin: 10px">
        <div class="mdl-card__title mdl-card--expand">
            <div class="row">
                <div>
                    @if (Question != null)
                    {
                        <h4 class="mdl-card__title-text">Question</h4>

                    }
                    else
                    {
                        <h4 class="mdl-card__title-text">Answer</h4>
                    }
                </div>
                <div class="mdl-textfield mdl-js-textfield">
                    @if (Question != null)
                    {
                        <H4>@Question.Text</H4>
                    }
                    else
                    {
                        <h4>@Answer.Text</h4>
                    }
                </div>
            </div>
        </div>
    </div>
    <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect" onclick="@Next">
        Next
    </a>
}
@if (IsWaiting)
{
    <h1>Waiting for your turn</h1>
}

@functions {
    [Parameter]
    public Guid SessionId { get; set; }

    [Parameter]
    public Guid PlayerId { get; set; }

    public bool IsWaiting { get; set; }

    public Question Question { get; set; }
    public Answer Answer { get; set; }

    System.Timers.Timer Timer;

    protected override async Task OnInitAsync()
    {
        IsWaiting = true;

        Timer = new System.Timers.Timer(500);
        Timer.Elapsed += Elapsed;
        Timer.Start();
    }

    private async void Elapsed(object sender, System.Timers.ElapsedEventArgs e)
    {
        if (await answerService.AllAnswersSubmitted(SessionId))
        {
            uriHelper.NavigateTo($"whatif/session/{SessionId}/{PlayerId}/Finish");
            Timer.Stop();
        }
    }

    async Task Next()
    {
    }
}
